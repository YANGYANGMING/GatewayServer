# Generated by Django 2.2.2 on 2020-04-09 10:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Enterprise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Gateway',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('Enterprise', models.CharField(max_length=128)),
                ('gw_status', models.SmallIntegerField(choices=[(0, '掉线'), (1, '在线')], default=1)),
                ('network_id', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Menus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('url_type', models.SmallIntegerField(choices=[(0, 'absolute'), (1, 'dynamic')], default=0)),
                ('url_name', models.CharField(max_length=128)),
            ],
            options={
                'unique_together': {('name', 'url_name')},
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('menus', models.ManyToManyField(to='GWS.Menus')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('enterprise', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('gateway', models.ManyToManyField(to='GWS.Gateway')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('role', models.ManyToManyField(blank=True, null=True, to='GWS.Role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_id', models.CharField(max_length=32, unique=True)),
                ('network_id', models.CharField(max_length=32, unique=True)),
                ('alias', models.CharField(max_length=64, unique=True)),
                ('received_time_data', models.CharField(max_length=128)),
                ('battery', models.CharField(max_length=32)),
                ('cHz', models.CharField(default='2', max_length=32)),
                ('gain', models.CharField(default='60', max_length=32)),
                ('avg_time', models.CharField(default='4', max_length=32)),
                ('Hz', models.CharField(default='2', max_length=32)),
                ('Sample_depth', models.CharField(default='2', max_length=32)),
                ('Sample_Hz', models.CharField(default='500', max_length=32)),
                ('sensor_status', models.SmallIntegerField(choices=[(0, '已禁用'), (1, '已开通')], default=1)),
                ('sensor_type', models.SmallIntegerField(choices=[(0, '常温'), (1, '高温')], default=0)),
                ('Importance', models.SmallIntegerField(choices=[(0, '一般'), (1, '重要')], default=0)),
                ('date_of_installation', models.DateField(auto_now_add=True)),
                ('initial_thickness', models.CharField(blank=True, max_length=32, null=True)),
                ('alarm_thickness', models.CharField(blank=True, max_length=32, null=True)),
                ('alarm_battery', models.CharField(blank=True, max_length=32, null=True)),
                ('area', models.TextField(blank=True, null=True, verbose_name='所在区域')),
                ('location', models.TextField(blank=True, null=True, verbose_name='所在位置')),
                ('location_img_path', models.TextField(blank=True, null=True, verbose_name='所在位置图片路径')),
                ('description', models.TextField(blank=True, null=True)),
                ('assembly_crewman', models.CharField(blank=True, max_length=32, null=True)),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GWS.Gateway')),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material', models.SmallIntegerField(choices=[(0, '未定义'), (1, '碳钢'), (2, '不锈钢')], default=0)),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GWS.Sensor')),
            ],
        ),
        migrations.CreateModel(
            name='Corrosion_rate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corrosion_rate_interval', models.SmallIntegerField(choices=[(7, '一周'), (15, '半个月'), (30, '1个月'), (90, '3个月'), (180, '6个月'), (365, '12个月'), ('', 'all date')], default=30)),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GWS.Sensor')),
            ],
        ),
    ]
